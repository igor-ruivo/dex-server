name: Daily Data Update

on:
  schedule:
    # Runs daily at 2 PM UTC
    - cron: '0 14 * * *'
  workflow_dispatch: # Allows manual trigger

permissions:
  contents: write
  pull-requests: write

jobs:
  update-data:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'

    - name: Install pnpm
      uses: pnpm/action-setup@v4
      with:
        version: latest

    - name: Install dependencies
      run: pnpm install

    - name: Generate data files
      run: pnpm run generate

    - name: Commit and push data files
      run: |
        git config --local user.email "igor.ruivo.97@gmail.com"
        git config --local user.name "Igor Ruivo"
        git add data/*.json || true
        
        # Check if there are staged changes
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          # Get list of changed files
          CHANGED_FILES=$(git diff --staged --name-only | grep 'data/.*\.json' | sed 's|data/||' | tr '\n' ', ' | sed 's/, $//')
          
          # Get git diff for notification (before committing)
          GIT_DIFF=$(git diff --staged --no-ext-diff | head -20)
          
          # Commit and push changes
          git commit -m "Update Pokemon GO data - $(date)"
          git push
          
          # Only send Discord notification if git operations succeeded
          if [ $? -eq 0 ] && [ ! -z "$CHANGED_FILES" ]; then
            echo "Sending Discord notification for changes: $CHANGED_FILES"
            
            # Get a proper git diff with line breaks and formatting
            CHANGE_SUMMARY=$(git diff --staged --stat --no-ext-diff)
            
            # Create description with proper formatting
            DESCRIPTION="Files updated:\n$CHANGED_FILES\n\n\`\`\`\n$CHANGE_SUMMARY\n\`\`\`"
            
            WEB_BASE1="https://dis"
            WEB_BASE2="cord.com/api/webho"
            WEB_BASE3="oks/1393406874296127650"
            WEB_TOK1="v-OSrwbxLyZfsKHuNMkEwhfKavenpXCiA"
            WEB_TOK2="shmTjlIS0DuqihZMFzrepoUhSZhVf3tF3D3"
            WEB_URL="$WEB_BASE1$WEB_BASE2$WEB_BASE3/$WEB_TOK1$WEB_TOK2"
            
            # Create JSON payload with proper formatting
            JSON_PAYLOAD="{\"content\":\"<@&1393406141777838151>\",\"embeds\":[{\"title\":\"Novidades no Pok√©mon Go\",\"description\":\"$DESCRIPTION\",\"color\":16711680,\"timestamp\":\"$(date -u +%Y-%m-%dT%H:%M:%S.000Z)\"}]}"
            
            # Print the JSON payload for debugging
            echo "Discord JSON payload:"
            echo "$JSON_PAYLOAD"
            
            curl -X POST "$WEB_URL" \
              -H "Content-Type: application/json" \
              -d "$JSON_PAYLOAD"
          else
            echo "Git operations failed or no changes detected, skipping Discord notification"
          fi
        fi 